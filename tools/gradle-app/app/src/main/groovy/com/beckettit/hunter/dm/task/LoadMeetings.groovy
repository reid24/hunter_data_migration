/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package com.beckettit.hunter.dm.task

import com.beckettit.Env
import com.beckettit.transform.*
import com.beckettit.process.Util
import com.beckettit.salesforce.*
import com.beckettit.salesforce.soap.*
import com.beckettit.jdbc.*
import com.beckettit.hunter.dm.obj.*
import org.apache.log4j.Logger

class LoadMeetings extends BaseTask {
    Boolean insert = false
    Boolean update = false

    public LoadMeetings(String[] args){
        super(args)
        insert = args?.findAll {
            it == '--insert'
        }.size() > 0

        update = args?.findAll {
            it == '--update'
        }.size() > 0
    }

    public void run() {
        if(insert){
            ObjectDef objDef = Event.getInsertMeetingsObjectDef()
            String query = """
            select * from (
                select ref.id, mig.*, c.id sfdc_whoid from ${objDef.table} mig
                left outer join ref_event ref on ref.external_id = mig.External_ID__c
                left outer join ref_contact c on c.external_id = mig.WhoId
            ) m WHERE m.id IS NULL and m.OwnerId is null
            LIMIT 1
            """
            println query
            printCount(query, "meetings to insert...")
            jdbc.execute "delete from save_results where request_id = 'insert-meetings'"
            soap.upsertAll("insert-meetings", objDef, query, [batchSize:200])
            saveUpsertResultsSummary("insert_meetings_result", query, objDef.externalIdField)
        }

        if(update){
            ObjectDef objDef = Event.getUpdateMeetingsObjectDef()
            String query = """
            SELECT * FROM (
                select ref.id, mig.*, c.id sfdc_whoid from ${objDef.table} mig
                left outer join ref_event ref on ref.external_id = mig.External_ID__c
                left outer join ref_contact c on c.external_id = mig.WhoId
            ) m WHERE m.id IS NOT NULL and m.OwnerId is null
            LIMIT 5
            """
            println query
            printCount(query, "meetings to update...")
            jdbc.execute "delete from save_results where request_id = 'update-meetings'"
            soap.updateAll("update-meetings", objDef, query, [batchSize:200])
            saveUpdateResultsSummary("update_meetings_result", query)
        }
    }

    //main task
    static void main(String[] args) {
        LoadMeetings proc = new LoadMeetings(args)
        proc.run()
    }
}
