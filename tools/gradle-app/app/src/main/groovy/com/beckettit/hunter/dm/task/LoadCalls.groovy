/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package com.beckettit.hunter.dm.task

import com.beckettit.Env
import com.beckettit.transform.*
import com.beckettit.process.Util
import com.beckettit.salesforce.*
import com.beckettit.salesforce.soap.*
import com.beckettit.jdbc.*
import com.beckettit.hunter.dm.obj.*
import org.apache.log4j.Logger

class LoadCalls extends BaseTask {
    Boolean insert = false
    Boolean update = false

    public LoadCalls(String[] args){
        super(args)
        insert = args?.findAll {
            it == '--insert'
        }.size() > 0

        update = args?.findAll {
            it == '--update'
        }.size() > 0
    }

    public void run() {
        if(insert){
            ObjectDef objDef = Event.getInsertCallsObjectDef()
            String query = """
            select * from (
                select * from ${objDef.table} ma
                left outer join ref_event ra on ra.external_id = ma.External_ID__c 
                where ra.id is null
            ) m
            """
            println query
            soap.upsertAll("insert-calls", objDef, query, [batchSize:200])
        }

        if(update){
            ObjectDef objDef = Event.getUpdateCallsObjectDef()
            String query = """
            select * from (
                select * from ${objDef.table} ma
                inner join ref_event ra on ra.external_id = ma.External_ID__c
            ) m
            """
            println query
            soap.upsertAll("update-calls", objDef, query, [batchSize:200])
        }
    }

    //main task
    static void main(String[] args) {
        LoadCalls proc = new LoadCalls(args)
        proc.run()
    }
}
