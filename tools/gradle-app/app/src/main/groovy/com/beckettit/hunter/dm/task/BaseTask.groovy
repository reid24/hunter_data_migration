/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package com.beckettit.hunter.dm.task

import com.beckettit.Env
import com.beckettit.transform.*
import com.beckettit.process.Util
import com.beckettit.salesforce.*
import com.beckettit.salesforce.soap.*
import com.beckettit.jdbc.*
import com.beckettit.hunter.dm.obj.*
import org.apache.log4j.Logger

class BaseTask {
    private static final Logger log = Logger.getLogger(BaseTask.class)
    JdbcClient jdbc
    SOAPClient soap
    String[] args

    public BaseTask(String[] args) {
        log.debug "args:${args}"
        this.args = args
        Properties config = new Properties()
        config.load(new File(BaseTask.class.getClassLoader().getResource("dm.properties").getFile()).newDataInputStream())
        log.debug "config: ${config}"

        Env.init()
        jdbc = new JdbcClient()
        jdbc.initProfile(Env.getJdbcProfile())

        soap = new SOAPClient(jdbc)
        soap.initProfile(Env.getSoapProfile())
        soap.authenticate()
    }

    void printCount(String query, String message) {
        String countQuery = "select count(*) ct from (${query}) c"
        jdbc.eachRow(countQuery){
            println "${it.ct} ${message}"
        }
    }

     void saveUpdateResultsSummary(String newTableName, String query) {
        jdbc.execute "DROP TABLE IF EXISTS ${newTableName}"
        String createQuery = "create table ${newTableName} select x.*,sr.success,sr.error_message,sr.error_fields,sr.error_status from (${query}) x inner join save_results sr on sr.external_id = x.id"
        jdbc.execute(createQuery)
    }

     void saveUpsertResultsSummary(String newTableName, String query, String externIdField) {
        jdbc.execute "DROP TABLE IF EXISTS ${newTableName}"
        String createQuery = "create table ${newTableName} select x.*,sr.success,sr.error_message,sr.error_fields,sr.error_status from (${query}) x inner join save_results sr on sr.external_id = x.${externIdField}"
        jdbc.execute(createQuery)
    }
}
